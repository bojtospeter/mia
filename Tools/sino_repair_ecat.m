function sino_repair_ecat(filename)
% sinogram preparation script
%
% this script try to remove the artifact lines from the sinogram 
% generated by an extra line source in the FOV   

num_of_slice = 47;
num_of_projection = 192;
num_of_member = 192;

if nargin == 0
    [FileName, FilePath] = uigetfile('*.v;*.V;*.i;*.S','Select ecat file');
     if FileName == 0;
          imaVOL = [];scaninfo = []; hd = [];
          return;
     end
    filename = [FilePath,FileName];
end

[ fid1, message ]       = ecatfile( 'open', filename );
[ mh1 ]                 = ecatfile( 'mh', fid1 );
[ matranges, message ] = ecatfile( 'matranges', fid1 );
%the columns in matranges refer to frame, plane, gate, data, bed

if fid1 == -1
  f1 = [];
  return
end
current_bed = input(['The required bedpos (available bedpos: 0-',num2str(matranges(2,5)),' ):']);
current_frame = 1; current_plane = 1; current_gate = 1; current_data = 0;

[ dataVOL, hd, status ]    = ecatfile( 'read', fid1, [ current_frame current_plane current_gate current_data  current_bed] );
%sliceout = zeros(size(dataVOL));
sliceout = dataVOL;

thres_onsino = 40;
figh = figure;map=colormap('spectral');
NextSlice = 1;
i=1;%current slice
while NextSlice
    slice_input = input(['Next Slice (actual: ',num2str(i),' ): ']);
    if ~isempty(slice_input)
        if slice_input > num_of_slice && slice_input < 1
            continue;
        elseif slice_input == 0
            break
        end
        i = slice_input;
    end
    set(figh,'name',['Slice: ',num2str(i)]);
    itmp0 = squeeze(sliceout(:,i,:)); itmp = itmp0;
    imagesc(itmp,[0 thres_onsino]); colorbar;
    sliceyes = input('Do you need to process this slice (y/n): ','s');
    if strcmp(sliceyes,'n')
        i = i+1;
        continue;
    end
    ImLevelNo = 1;
    while ImLevelNo
        imagesc(itmp,[0 thres_onsino]); colorbar; 
        thres_input = input('New color max: ');
        if thres_input == 0
            ImLevelNo = 0;
        else
            thres_onsino = thres_input;
        end
    end
    imagesc(itmp,[0 thres_onsino]);colorbar;
    rr = itmp0 > thres_onsino;
    itmp(rr) = 0; 
    % remove the outher pixels
    disp('Draw 1st ROIpoly');disp('');
    bw = roipoly; itmp(bw) = 0; imagesc(itmp,[0 thres_onsino]);colorbar;
    disp('Draw 2nd roipoly');disp('');
    bw = roipoly; itmp(bw) = 0; 
    imagesc(itmp,[0 thres_onsino]);colorbar;
    sliceout(:,i,:) = itmp;
    i = i+1;
end



% save the ecat sinogram
message  = ecatfile( 'write', fid1, sliceout, hd, [ current_frame current_plane current_gate current_data  current_bed] );
message                = ecatfile( 'close', fid1 );
    